// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TallerConexiònbase.Data;

#nullable disable

namespace TallerConexiònbase.Migrations
{
    [DbContext(typeof(TallerConexiònbaseContext))]
    partial class TallerConexiònbaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TallerConexiònbase.Models.Estudiante", b =>
                {
                    b.Property<string>("BannerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BannerId");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("TallerConexiònbase.Models.Pais", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("CodigoTelefonico")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("TallerConexiònbase.Models.RecintoVacunacion", b =>
                {
                    b.Property<int>("IdRecinto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecinto"));

                    b.Property<string>("DireccionRecinto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("paisRecintoid")
                        .HasColumnType("int");

                    b.HasKey("IdRecinto");

                    b.HasIndex("paisRecintoid");

                    b.ToTable("RecintoVacunacion");
                });

            modelBuilder.Entity("TallerConexiònbase.Models.RegistroVacunacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EstudianteBannerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaVacunacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecintoVacunacionIdRecinto")
                        .HasColumnType("int");

                    b.Property<int>("VacunaIdVAcuna")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteBannerId");

                    b.HasIndex("RecintoVacunacionIdRecinto");

                    b.HasIndex("VacunaIdVAcuna");

                    b.ToTable("RegistroVacunacion");
                });

            modelBuilder.Entity("TallerConexiònbase.Models.Vacuna", b =>
                {
                    b.Property<int>("IdVAcuna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVAcuna"));

                    b.Property<string>("NombreVacuna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Paisid")
                        .HasColumnType("int");

                    b.HasKey("IdVAcuna");

                    b.HasIndex("Paisid");

                    b.ToTable("Vacuna");
                });

            modelBuilder.Entity("TallerConexiònbase.Models.RecintoVacunacion", b =>
                {
                    b.HasOne("TallerConexiònbase.Models.Pais", "paisRecinto")
                        .WithMany()
                        .HasForeignKey("paisRecintoid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("paisRecinto");
                });

            modelBuilder.Entity("TallerConexiònbase.Models.RegistroVacunacion", b =>
                {
                    b.HasOne("TallerConexiònbase.Models.Estudiante", "Estudiante")
                        .WithMany("registroVacunacions")
                        .HasForeignKey("EstudianteBannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TallerConexiònbase.Models.RecintoVacunacion", "RecintoVacunacion")
                        .WithMany()
                        .HasForeignKey("RecintoVacunacionIdRecinto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TallerConexiònbase.Models.Vacuna", "Vacuna")
                        .WithMany()
                        .HasForeignKey("VacunaIdVAcuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("RecintoVacunacion");

                    b.Navigation("Vacuna");
                });

            modelBuilder.Entity("TallerConexiònbase.Models.Vacuna", b =>
                {
                    b.HasOne("TallerConexiònbase.Models.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("Paisid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("TallerConexiònbase.Models.Estudiante", b =>
                {
                    b.Navigation("registroVacunacions");
                });
#pragma warning restore 612, 618
        }
    }
}
